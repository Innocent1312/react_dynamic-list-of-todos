{"version":3,"sources":["components/User/index.js","components/User/User.js","components/TodoItem/index.js","components/TodoItem/TodoItem.js","components/TodoList/index.js","components/TodoList/TodoList.js","App.js","api/Fetching.js","index.js"],"names":["User","_ref","name","react_default","a","createElement","Fragment","TodoItem","_ref$todoItem","todoItem","user","id","title","completed","components_User","TodoList","todoList","onClick","map","button","key","type","todo","components_TodoItem","App","_useState","useState","_useState2","Object","slicedToArray","listOfTodos","saveTodos","_useState3","_useState4","loaded","setLoading","_useState5","_useState6","sort","setSort","_useState7","_useState8","error","setError","length","components_TodoList","value","todoListCopy","toConsumableArray","b","firstItem","secondItem","String","localeCompare","reverse","_ref2","usersFromServer","todosFromServer","regenerator_default","async","_context","prev","next","awrap","Promise","all","fetch","then","responses","response","json","sent","objectSpread2","find","userId","t0","stop","disabled","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.8c126e31.chunk.js","sourcesContent":["import User from './User';\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ name }) => (\n  <>\n    <td>{name}</td>\n  </>\n);\n\nUser.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n\nexport default User;\n","import TodoItem from './TodoItem';\n\nexport default TodoItem;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport User from '../User';\n\nconst TodoItem = ({ todoItem: { user, id, title, completed } }) => (\n  <tr>\n    <td>{id}</td>\n    <td>{title}</td>\n    <User name={user.name} />\n    <td>{completed ? 'completed' : 'not completed'}</td>\n  </tr>\n);\n\nTodoItem.propTypes = {\n  todoItem: PropTypes.shape({\n    user: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n    }).isRequired,\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  }).isRequired,\n};\n\nexport default TodoItem;\n","import TodoList from './TodoList';\n\nexport default TodoList;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport TodoItem from '../TodoItem';\n\nconst TodoList = ({ todoList, onClick }) => {\n  const buttons = ['id', 'title', 'name', 'completed'];\n\n  return (\n    <table>\n      <thead>\n        <tr>\n          {buttons.map(button => (\n            <th key={button}>\n              <button\n                type=\"button\"\n                onClick={() => onClick(button)}\n              >\n                {button === 'completed' ? 'status' : button}\n              </button>\n            </th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {todoList.map(todo => (\n          <TodoItem todoItem={todo} key={todo.id} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nTodoList.propTypes = {\n  todoList: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React, { useState } from 'react';\n// eslint-disable-next-line import/named\nimport { getTodosAndUsers } from './api/Fetching';\nimport TodoList from './components/TodoList';\n\nconst App = () => {\n  const [listOfTodos, saveTodos] = useState([]);\n  const [loaded, setLoading] = useState(false);\n  const [sort, setSort] = useState('id');\n  const [error, setError] = useState(false);\n\n  const loadTodos = async() => {\n    setLoading(true);\n\n    try {\n      const [usersFromServer, todosFromServer] = await getTodosAndUsers();\n\n      const todoList = todosFromServer.map(todo => ({\n        ...todo,\n        user: usersFromServer.find(user => user.id === todo.userId),\n      }));\n\n      saveTodos(todoList);\n    } catch {\n      setLoading(false);\n      setError(true);\n    }\n  };\n\n  const sorting = (value) => {\n    if (sort === value) {\n      saveTodos([...listOfTodos].reverse());\n\n      return;\n    }\n\n    const todoListCopy = [...listOfTodos]\n      .sort((a, b) => {\n        const firstItem = a[value] || a.user[value];\n        const secondItem = b[value] || b.user[value];\n\n        return typeof firstItem === 'number'\n          ? firstItem - secondItem\n          : String(firstItem).localeCompare(String(secondItem));\n      });\n\n    saveTodos(todoListCopy);\n\n    setSort(value);\n  };\n\n  if (error) {\n    return <p>Error</p>;\n  }\n\n  return (\n    <div>\n      {!listOfTodos.length ? (\n        <>\n          <button\n            type=\"button\"\n            onClick={loadTodos}\n            disabled={loaded}\n          >\n            {loaded ? 'Loading...' : 'Load'}\n          </button>\n        </>\n      )\n        : (\n          <>\n            <TodoList todoList={listOfTodos} onClick={sorting} />\n          </>\n        )\n      }\n    </div>\n  );\n};\n\nexport default App;\n","const USERS_URL = 'https://jsonplaceholder.typicode.com/users';\nconst TODOS_URL = 'https://jsonplaceholder.typicode.com/todos';\n\nexport const getTodosAndUsers = () => (\n  Promise.all([fetch(USERS_URL), fetch(TODOS_URL)])\n    .then(responses => (\n      Promise.all(responses.map(response => response.json()))\n    ))\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}